@book{scherer2019mathematics,
  title     = {Mathematics of Quantum Computing},
  subtitle  = {An Introduction},
  author    = {Scherer, Wolfgang},
  year      = {2019},
  publisher = {Springer Cham},
  doi       = {10.1007/978-3-030-12358-1},
  edition   = {1},
  pages     = {XIX, 764},
  series    = {Physics and Astronomy}
}
@article{osnaghi2009the,
  title   = {The origin of the {Everettian} heresy},
  journal = {Studies in History and Philosophy of Science Part B: Studies in History and Philosophy of Modern Physics},
  volume  = {40},
  number  = {2},
  pages   = {97-123},
  year    = {2009},
  issn    = {1355-2198},
  doi     = {https://doi.org/10.1016/j.shpsb.2008.10.002},
  url     = {https://www.sciencedirect.com/science/article/pii/S1355219808000786},
  author  = {Stefano Osnaghi and Fábio Freitas and Olival Freire}
}
@article{Feng2021Hoare,
  author     = {Feng, Yuan and Ying, Mingsheng},
  title      = {Quantum Hoare Logic with Classical Variables},
  year       = {2021},
  issue_date = {December 2021},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {4},
  url        = {https://doi.org/10.1145/3456877},
  doi        = {10.1145/3456877},
  abstract   = {Hoare logic provides a syntax-oriented method to reason about program correctness and has been proven effective in the verification of classical and probabilistic programs. Existing proposals for quantum Hoare logic either lack completeness or support only quantum variables, thus limiting their capability in practical use. In this article, we propose a quantum Hoare logic for a simple while language that involves both classical and quantum variables. Its soundness and relative completeness are proven for both partial and total correctness of quantum programs written in the language. Remarkably, with novel definitions of classical-quantum states and corresponding assertions, the logic system is quite simple and similar to the traditional Hoare logic for classical programs. Furthermore, to simplify reasoning in real applications, auxiliary proof rules are provided that support standard logical operation in the classical part of assertions and super-operator application in the quantum part. Finally, a series of practical quantum algorithms, in particular the whole algorithm of Shor’s factorisation, are formally verified to show the effectiveness of the logic.},
  journal    = {ACM Transactions on Quantum Computing},
  month      = {dec},
  articleno  = {16},
  numpages   = {43},
  keywords   = {Quantum programming, quantum while language}
}
@inproceedings{paykin2017qwire,
  author    = {Paykin, Jennifer and Rand, Robert and Zdancewic, Steve},
  title     = {{QWIRE}: A Core Language for Quantum Circuits},
  year      = {2017},
  isbn      = {9781450346603},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3009837.3009894},
  doi       = {10.1145/3009837.3009894},
  booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
  pages     = {846-858},
  numpages  = {13},
  keywords  = {denotational semantics, linear types, quantum circuits, quantum programming languages},
  location  = {Paris, France},
  series    = {POPL '17}
}
@article{Hietala2021voqc,
  author     = {Hietala, Kesha and Rand, Robert and Hung, Shih-Han and Wu, Xiaodi and Hicks, Michael},
  title      = {A Verified Optimizer for Quantum Circuits},
  year       = {2021},
  issue_date = {January 2021},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {5},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3434318},
  doi        = {10.1145/3434318},
  abstract   = {We present VOQC, the first fully verified optimizer for quantum circuits, written using the Coq proof assistant. Quantum circuits are expressed as programs in a simple, low-level language called SQIR, a simple quantum intermediate representation, which is deeply embedded in Coq. Optimizations and other transformations are expressed as Coq functions, which are proved correct with respect to a semantics of SQIR programs. SQIR uses a semantics of matrices of complex numbers, which is the standard for quantum computation, but treats matrices symbolically in order to reason about programs that use an arbitrary number of quantum bits. SQIR's careful design and our provided automation make it possible to write and verify a broad range of optimizations in VOQC, including full-circuit transformations from cutting-edge optimizers.},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jan},
  articleno  = {37},
  numpages   = {29},
  keywords   = {Quantum Computing, Circuit Optimization, Programming Languages, Formal Verification, Certified Compilation}
}
@misc{cross2017open,
  title         = {Open Quantum Assembly Language},
  author        = {Andrew W. Cross and Lev S. Bishop and John A. Smolin and Jay M. Gambetta},
  year          = {2017},
  eprint        = {1707.03429},
  archiveprefix = {arXiv},
  primaryclass  = {quant-ph}
}
@misc{wilde2019quantum,
  title         = {From Classical to Quantum {Shannon} Theory},
  author        = {Mark M. Wilde},
  year          = {2019},
  eprint        = {1106.1445},
  archiveprefix = {arXiv},
  primaryclass  = {quant-ph}
}
@inproceedings{wang2022qdiff,
  author    = {Wang, Jiyuan and Zhang, Qian and Xu, Guoqing Harry and Kim, Miryung},
  title     = {{QDiff}: Differential Testing of Quantum Software Stacks},
  year      = {2022},
  isbn      = {9781665403375},
  publisher = {IEEE Press},
  url       = {https://doi.org/10.1109/ASE51524.2021.9678792},
  doi       = {10.1109/ASE51524.2021.9678792},
  booktitle = {Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering},
  pages     = {692–704},
  numpages  = {13},
  location  = {Melbourne, Australia},
  series    = {ASE '21}
}
@inproceedings{paltenghi2023morphq,
  author    = {Paltenghi, Matteo and Pradel, Michael},
  title     = {{MorphQ}: Metamorphic Testing of the {Qiskit} Quantum Computing Platform},
  year      = {2023},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  doi       = {10.48550/arXiv.2206.01111},
  booktitle = {Proceedings of the 45th International Conference on Software Engineering},
  series    = {ICSE '23}
}
@article{klein2006machine,
  author     = {Klein, Gerwin and Nipkow, Tobias},
  title      = {A Machine-Checked Model for a {Java}-like Language, Virtual Machine, and Compiler},
  year       = {2006},
  issue_date = {July 2006},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {28},
  number     = {4},
  issn       = {0164-0925},
  url        = {https://doi.org/10.1145/1146809.1146811},
  doi        = {10.1145/1146809.1146811},
  journal    = {ACM Trans. Program. Lang. Syst.},
  month      = {jul},
  pages      = {619–695},
  numpages   = {77},
  keywords   = {Java, theorem proving, operational semantics}
}
@article{bogdanas2015kjava,
  author     = {Bogdanas, Denis and Ro\c{s}u, Grigore},
  title      = {{K-Java}: A Complete Semantics of {Java}},
  year       = {2015},
  issue_date = {January 2015},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {50},
  number     = {1},
  issn       = {0362-1340},
  url        = {https://doi.org/10.1145/2775051.2676982},
  doi        = {10.1145/2775051.2676982},
  journal    = {SIGPLAN Not.},
  month      = {jan},
  pages      = {445–456},
  numpages   = {12},
  keywords   = {mechanized semantics, k framework, java}
}
@inproceedings{bodin2014trusted,
  author    = {Bodin, Martin and Chargueraud, Arthur and Filaretti, Daniele and Gardner, Philippa and Maffeis, Sergio and Naudziuniene, Daiva and Schmitt, Alan and Smith, Gareth},
  title     = {A Trusted Mechanised {JavaScript} Specification},
  year      = {2014},
  isbn      = {9781450325448},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2535838.2535876},
  doi       = {10.1145/2535838.2535876},
  booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {87–100},
  numpages  = {14},
  keywords  = {javascript, coq, mechanised semantics},
  location  = {San Diego, California, USA},
  series    = {POPL '14}
}
@inproceedings{guha2010essence,
  author    = {Guha, Arjun and Saftoiu, Claudiu and Krishnamurthi, Shriram},
  title     = {The Essence of {JavaScript}},
  year      = {2010},
  isbn      = {3642141064},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  booktitle = {Proceedings of the 24th European Conference on Object-Oriented Programming},
  pages     = {126–150},
  numpages  = {25},
  location  = {Maribor, Slovenia},
  series    = {ECOOP'10}
}
@article{kumar2014cakeml,
  author     = {Kumar, Ramana and Myreen, Magnus O. and Norrish, Michael and Owens, Scott},
  title      = {{CakeML}: A Verified Implementation of {ML}},
  year       = {2014},
  issue_date = {January 2014},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {49},
  number     = {1},
  issn       = {0362-1340},
  url        = {https://doi.org/10.1145/2578855.2535841},
  doi        = {10.1145/2578855.2535841},
  journal    = {SIGPLAN Not.},
  month      = {jan},
  pages      = {179–191},
  numpages   = {13},
  keywords   = {machine code verification, compiler bootstrapping, compiler verification, verified parsing, ML, read-eval-print loop, verified type checking, verified garbage collection.}
}
@inproceedings{lee2007towards,
  author    = {Lee, Daniel K. and Crary, Karl and Harper, Robert},
  title     = {Towards a Mechanized Metatheory of Standard ML},
  year      = {2007},
  isbn      = {1595935754},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1190216.1190245},
  doi       = {10.1145/1190216.1190245},
  booktitle = {Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {173–184},
  numpages  = {12},
  keywords  = {standard ML, type safety, language definitions, mechanized metatheory, twelf, logical frameworks},
  location  = {Nice, France},
  series    = {POPL '07}
}
@article{leroy2009formal,
  author     = {Leroy, Xavier},
  title      = {Formal Verification of a Realistic Compiler},
  year       = {2009},
  issue_date = {July 2009},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {52},
  number     = {7},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/1538788.1538814},
  doi        = {10.1145/1538788.1538814},
  journal    = {Commun. ACM},
  month      = {jul},
  pages      = {107–115},
  numpages   = {9}
}
@article{jung2017rustbelt,
  author     = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
  title      = {RustBelt: Securing the Foundations of the Rust Programming Language},
  year       = {2017},
  issue_date = {January 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3158154},
  doi        = {10.1145/3158154},
  journal    = {Proc. ACM Program. Lang.},
  month      = {dec},
  articleno  = {66},
  numpages   = {34},
  keywords   = {logical relations, separation logic, Rust, concurrency, type systems}
}
@inproceedings{ellison2012executable,
  author    = {Ellison, Chucky and Ro\c{s}u, Grigore},
  title     = {An Executable Formal Semantics of C with Applications},
  year      = {2012},
  isbn      = {9781450310833},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2103656.2103719},
  doi       = {10.1145/2103656.2103719},
  booktitle = {Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {533–544},
  numpages  = {12},
  keywords  = {semantics, k, C},
  location  = {Philadelphia, PA, USA},
  series    = {POPL '12}
}
@inproceedings{park2015kjs,
  author    = {Park, Daejun and Stef\u{a}nescu, Andrei and Ro\c{s}u, Grigore},
  title     = {KJS: A Complete Formal Semantics of JavaScript},
  year      = {2015},
  isbn      = {9781450334686},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2737924.2737991},
  doi       = {10.1145/2737924.2737991},
  booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {346–356},
  numpages  = {11},
  keywords  = {K framework, JavaScript, mechanized semantics},
  location  = {Portland, OR, USA},
  series    = {PLDI '15}
}
@article{greenberg2019executable,
  author     = {Greenberg, Michael and Blatt, Austin J.},
  title      = {Executable Formal Semantics for the POSIX Shell},
  year       = {2019},
  issue_date = {January 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3371111},
  doi        = {10.1145/3371111},
  journal    = {Proc. ACM Program. Lang.},
  month      = {dec},
  articleno  = {43},
  numpages   = {30},
  keywords   = {small-step semantics, command line interfaces, POSIX, formalization}
}
@article{rosu2010overview,
  title   = {An overview of the K semantic framework},
  journal = {The Journal of Logic and Algebraic Programming},
  volume  = {79},
  number  = {6},
  pages   = {397-434},
  year    = {2010},
  note    = {Membrane computing and programming},
  issn    = {1567-8326},
  doi     = {https://doi.org/10.1016/j.jlap.2010.03.012},
  url     = {https://www.sciencedirect.com/science/article/pii/S1567832610000160},
  author  = {Grigore Ro\c{s}u and Traian Florin \c{S}erbănută}
}
@article{watt2023wasmref,
  author     = {Watt, Conrad and Trela, Maja and Lammich, Peter and M\"{a}rkl, Florian},
  title      = {WasmRef-Isabelle: A Verified Monadic Interpreter and Industrial Fuzzing Oracle for WebAssembly},
  year       = {2023},
  issue_date = {June 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {7},
  number     = {PLDI},
  url        = {https://doi.org/10.1145/3591224},
  doi        = {10.1145/3591224},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jun},
  articleno  = {110},
  numpages   = {24},
  keywords   = {refinement, virtual machine, WasmCert, theorem proving}
}
@inproceedings{schumi2021spectest,
  author    = {Schumi, Richard and Sun, Jun},
  editor    = {Guerra, Esther and Stoelinga, Mari{\"e}lle},
  title     = {SpecTest: Specification-Based Compiler Testing},
  booktitle = {Fundamental Approaches to Software Engineering},
  year      = {2021},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {269--291},
  isbn      = {978-3-030-71500-7}
}
@inproceedings{shor1994algorithms,
  author    = {Shor, P. W.},
  title     = {Algorithms for Quantum Computation: Discrete Logarithms and Factoring},
  year      = {1994},
  isbn      = {0818665807},
  publisher = {IEEE Computer Society},
  address   = {USA},
  url       = {https://doi.org/10.1109/SFCS.1994.365700},
  doi       = {10.1109/SFCS.1994.365700},
  booktitle = {Proceedings of the 35th Annual Symposium on Foundations of Computer Science},
  pages     = {124–134},
  numpages  = {11},
  keywords  = {polynomial factor, cryptosystems, quantum computer, physical computational device, factoring, Las Vegas algorithms, quantum computation algorithms, discrete logarithms},
  series    = {SFCS '94}
}
@article{dobsicek2007arbitrary,
  doi       = {10.1103/physreva.76.030306},
  url       = {https://doi.org/10.1103\%2Fphysreva.76.030306},
  year      = 2007,
  month     = {sep},
  publisher = {American Physical Society ({APS})},
  volume    = {76},
  number    = {3},
  author    = {Miroslav Dob{\v{s}}{\'{\i}}{\v{c}}ek and Göran Johansson and Vitaly Shumeiko and Göran Wendin},
  title     = {Arbitrary accuracy iterative quantum phase estimation algorithm using a single ancillary qubit: A two-qubit benchmark},
  journal   = {Physical Review A}
}
@article{everett1957relative,
  author    = {Everett, Hugh},
  title     = {``Relative state'' formulation of quantum mechanics},
  journal   = {Reviews of modern physics},
  volume    = {29},
  number    = {3},
  pages     = {454},
  year      = {1957},
  publisher = {APS}
}
@inproceedings{vytiniotis2013halo,
  author    = {Vytiniotis, Dimitrios and Peyton Jones, Simon and Claessen, Koen and Ros\'{e}n, Dan},
  title     = {{HALO}: {Haskell} to Logic through Denotational Semantics},
  year      = {2013},
  isbn      = {9781450318327},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2429069.2429121},
  doi       = {10.1145/2429069.2429121},
  booktitle = {Proceedings of the 40th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {431–442},
  numpages  = {12},
  keywords  = {first-order logic, static contract checking},
  location  = {Rome, Italy},
  series    = {POPL '13}
}
@inproceedings{coughlin2014fissile,
  author    = {Coughlin, Devin and Chang, Bor-Yuh Evan},
  title     = {Fissile Type Analysis: Modular Checking of Almost Everywhere Invariants},
  year      = {2014},
  isbn      = {9781450325448},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2535838.2535855},
  doi       = {10.1145/2535838.2535855},
  booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages     = {73–85},
  numpages  = {13},
  keywords  = {objective-c, almost type-consistent heaps, dependent refinement types, almost everywhere invariants, reflection},
  location  = {San Diego, California, USA},
  series    = {POPL '14}
}
@inproceedings{park2021jiset,
  author    = {Park, Jihyeok and Park, Jihee and An, Seungmin and Ryu, Sukyoung},
  title     = {{JISET}: {JavaScript} {IR}-Based Semantics Extraction Toolchain},
  year      = {2021},
  isbn      = {9781450367684},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3324884.3416632},
  doi       = {10.1145/3324884.3416632},
  booktitle = {Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering},
  pages     = {647–658},
  numpages  = {12},
  keywords  = {JavaScript, mechanized formal semantics, program synthesis},
  location  = {Virtual Event, Australia},
  series    = {ASE '20}
}
@inproceedings{park2021jest,
  author    = {Park, Jihyeok and An, Seungmin and Youn, Dongjun and Kim, Gyeongwon and Ryu, Sukyoung},
  title     = {{JEST}: {N+1}-Version Differential Testing of Both {JavaScript} Engines and Specification},
  year      = {2021},
  isbn      = {9781450390859},
  publisher = {IEEE Press},
  url       = {https://doi.org/10.1109/ICSE43902.2021.00015},
  doi       = {10.1109/ICSE43902.2021.00015},
  booktitle = {Proceedings of the 43rd International Conference on Software Engineering},
  pages     = {13–24},
  numpages  = {12},
  keywords  = {differential testing, JavaScript, mechanized specification, conformance test generation},
  location  = {Madrid, Spain},
  series    = {ICSE '21}
}
@article{park2023feature,
  author     = {Park, Jihyeok and Youn, Dongjun and Lee, Kanguk and Ryu, Sukyoung},
  title      = {Feature-Sensitive Coverage for Conformance Testing of Programming Language Implementations},
  year       = {2023},
  issue_date = {June 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {7},
  number     = {PLDI},
  url        = {https://doi.org/10.1145/3591240},
  doi        = {10.1145/3591240},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jun},
  articleno  = {126},
  numpages   = {23},
  keywords   = {conformance test synthesis, feature-sensitive coverage, mechanized specification, coverage-guided fuzzing}
}
@article{li2023qasmbench,
  author     = {Li, Ang and Stein, Samuel and Krishnamoorthy, Sriram and Ang, James},
  title      = {{QASMBench}: A Low-Level Quantum Benchmark Suite for {NISQ} Evaluation and Simulation},
  year       = {2023},
  issue_date = {June 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {2},
  issn       = {2643-6809},
  url        = {https://doi.org/10.1145/3550488},
  doi        = {10.1145/3550488},
  journal    = {ACM Transactions on Quantum Computing},
  month      = {feb},
  articleno  = {10},
  numpages   = {26},
  keywords   = {NISQ, OpenQASM, quantum metrics, Benchmark}
}
@misc{tomesh2022supermarq,
  title         = {SupermarQ: A Scalable Quantum Benchmark Suite},
  author        = {Teague Tomesh and Pranav Gokhale and Victory Omole and Gokul Subramanian Ravi and Kaitlin N. Smith and Joshua Viszlai and Xin-Chuan Wu and Nikos Hardavellas and Margaret R. Martonosi and Frederic T. Chong},
  year          = {2022},
  eprint        = {2202.11045},
  archiveprefix = {arXiv},
  primaryclass  = {quant-ph}
}
@article{kroonenberg2018tale,
  title     = {The tale of {Cochran}'s rule: my contingency table has so many expected values smaller than 5, what am I to do?},
  author    = {Kroonenberg, PM and Verbeek, Albert},
  journal   = {The American Statistician},
  volume    = {72},
  number    = {2},
  pages     = {175--183},
  year      = {2018},
  publisher = {Taylor \& Francis}
}
@article{pearson1900criterion,
  title     = {On the criterion that a given system of deviations from the probable in the case of a correlated system of variables is such that it can be reasonably supposed to have arisen from random sampling},
  author    = {Pearson, Karl},
  journal   = {The London, Edinburgh, and Dublin Philosophical Magazine and Journal of Science},
  volume    = {50},
  number    = {302},
  pages     = {157--175},
  year      = {1900},
  publisher = {Taylor \& Francis}
}
@inproceedings{maffeis2008operational,
  author    = {Maffeis, Sergio and Mitchell, John C. and Taly, Ankur},
  title     = {An Operational Semantics for {JavaScript}},
  year      = {2008},
  isbn      = {9783540893295},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  url       = {https://doi.org/10.1007/978-3-540-89330-1_22},
  doi       = {10.1007/978-3-540-89330-1_22},
  booktitle = {Proceedings of the 6th Asian Symposium on Programming Languages and Systems},
  pages     = {307–325},
  numpages  = {19},
  location  = {Bangalore, India},
  series    = {APLAS '08}
}
@inproceedings{politz2012tested,
  author    = {Politz, Joe Gibbs and Carroll, Matthew J. and Lerner, Benjamin S. and Pombrio, Justin and Krishnamurthi, Shriram},
  title     = {A Tested Semantics for Getters, Setters, and Eval in {JavaScript}},
  year      = {2012},
  isbn      = {9781450315647},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2384577.2384579},
  doi       = {10.1145/2384577.2384579},
  booktitle = {Proceedings of the 8th Symposium on Dynamic Languages},
  pages     = {1–16},
  numpages  = {16},
  keywords  = {desugar, setters, wat, javascript, accessors, getters, eval, LambdaJS},
  location  = {Tucson, Arizona, USA},
  series    = {DLS '12}
}
@article{blazy2009mechanized,
  author  = {Blazy, Sandrine and Leroy, Xavier},
  title   = {Mechanized Semantics for the {Clight} Subset of the {C} Language},
  journal = {Journal of Automated Reasoning},
  year    = {2009},
  month   = {October},
  volume  = {43},
  number  = {3},
  pages   = {263--288},
  issn    = {1573-0670},
  doi     = {10.1007/s10817-009-9148-3},
  url     = {https://doi.org/10.1007/s10817-009-9148-3}
}
@inproceedings{memarian2016depths,
  author    = {Memarian, Kayvan and Matthiesen, Justus and Lingard, James and Nienhuis, Kyndylan and Chisnall, David and Watson, Robert N. M. and Sewell, Peter},
  title     = {Into the Depths of {C}: Elaborating the de Facto Standards},
  year      = {2016},
  isbn      = {9781450342612},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2908080.2908081},
  doi       = {10.1145/2908080.2908081},
  booktitle = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {1–15},
  numpages  = {15},
  keywords  = {C},
  location  = {Santa Barbara, CA, USA},
  series    = {PLDI '16}
}
@inproceedings{krebbers2014formal,
  author    = {Krebbers, Robbert
               and Leroy, Xavier
               and Wiedijk, Freek},
  editor    = {Klein, Gerwin
               and Gamboa, Ruben},
  title     = {Formal {C} Semantics: {CompCert} and the {C} Standard},
  booktitle = {Interactive Theorem Proving},
  year      = {2014},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {543--548},
  isbn      = {978-3-319-08970-6}
}
@inproceedings{farzan2004formal,
  author    = {Farzan, Azadeh
               and Chen, Feng
               and Meseguer, Jos{\'e}
               and Ro{\c{s}}u, Grigore},
  editor    = {Alur, Rajeev
               and Peled, Doron A.},
  title     = {Formal Analysis of {Java} Programs in {JavaFAN}},
  booktitle = {Computer Aided Verification},
  year      = {2004},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {501--505},
  isbn      = {978-3-540-27813-9}
}
@inproceedings{filaretti2014executable,
  author    = {Filaretti, Daniele
               and Maffeis, Sergio},
  editor    = {Jones, Richard},
  title     = {An Executable Formal Semantics of {PHP}},
  booktitle = {ECOOP 2014 -- Object-Oriented Programming},
  year      = {2014},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {567--592},
  abstract  = {PHP is among the most used languages for server-side scripting. Although substantial effort has been spent on the problem of automatically analysing PHP code, vulnerabilities remain pervasive in web applications, and analysis tools do not provide any formal guarantees of soundness or coverage. This is partly due to the lack of a precise specification of the language, which is highly dynamic and often exhibits subtle behaviour.},
  isbn      = {978-3-662-44202-9}
}
@inproceedings{politz2013python,
  author    = {Politz, Joe Gibbs and Martinez, Alejandro and Milano, Mae and Warren, Sumner and Patterson, Daniel and Li, Junsong and Chitipothu, Anand and Krishnamurthi, Shriram},
  title     = {{Python}: The Full Monty},
  year      = {2013},
  isbn      = {9781450323741},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2509136.2509536},
  doi       = {10.1145/2509136.2509536},
  booktitle = {Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages \& Applications},
  pages     = {217–232},
  numpages  = {16},
  keywords  = {serpents},
  location  = {Indianapolis, Indiana, USA},
  series    = {OOPSLA '13}
}
@inproceedings{watt2018mechanising,
  author    = {Watt, Conrad},
  title     = {Mechanising and Verifying the {WebAssembly} Specification},
  year      = {2018},
  isbn      = {9781450355865},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3167082},
  doi       = {10.1145/3167082},
  booktitle = {Proceedings of the 7th ACM SIGPLAN International Conference on Certified Programs and Proofs},
  pages     = {53–65},
  numpages  = {13},
  keywords  = {soundness, reduction, bytecode, stack machine},
  location  = {Los Angeles, CA, USA},
  series    = {CPP 2018}
}
@inproceedings{jiao2020semantic,
  author    = {Jiao, Jiao and Kan, Shuanglong and Lin, Shang-Wei and Sanan, David and Liu, Yang and Sun, Jun},
  booktitle = {2020 IEEE Symposium on Security and Privacy (SP)},
  title     = {Semantic Understanding of Smart Contracts: Executable Operational
               Semantics of {Solidity}},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {1695-1712},
  doi       = {10.1109/SP40000.2020.00066}
}
@inproceedings{mulligan2014lem,
  author    = {Mulligan, Dominic P. and Owens, Scott and Gray, Kathryn E. and Ridge, Tom and Sewell, Peter},
  title     = {{Lem}: Reusable Engineering of Real-World Semantics},
  year      = {2014},
  isbn      = {9781450328739},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2628136.2628143},
  doi       = {10.1145/2628136.2628143},
  booktitle = {Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming},
  pages     = {175–188},
  numpages  = {14},
  keywords  = {real-world semantics, specification languages, proof assistants, lem},
  location  = {Gothenburg, Sweden},
  series    = {ICFP '14}
}
@book{felleisen2009semantics,
  title     = {Semantics engineering with {PLT} {Redex}},
  author    = {Felleisen, Matthias and Findler, Robert Bruce and Flatt, Matthew},
  year      = {2009},
  publisher = {Mit Press}
}
@phdthesis{barras1997coq,
  title  = {The {Coq} proof assistant reference manual: Version 6.1},
  author = {Barras, Bruno and Boutin, Samuel and Cornes, Cristina and Courant,
            Judica{\"e}l and Filliatre, Jean-Christophe and Gimenez, Eduardo and
            Herbelin, Hugo and Huet, Gerard and Munoz, Cesar and Murthy, Chetan
            and others},
  year   = {1997},
  school = {Inria}
}
@inproceedings{watt2021two,
  author    = {Watt, Conrad
               and Rao, Xiaojia
               and Pichon-Pharabod, Jean
               and Bodin, Martin
               and Gardner, Philippa},
  editor    = {Huisman, Marieke
               and P{\u{a}}s{\u{a}}reanu, Corina
               and Zhan, Naijun},
  title     = {Two Mechanisations of WebAssembly 1.0},
  booktitle = {Formal Methods},
  year      = {2021},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {61--79},
  abstract  = {WebAssembly (Wasm) is a new bytecode language supported by all major Web browsers, designed primarily to be an efficient compilation target for low-level languages such as C/C++ and Rust. It is unusual in that it is officially specified through a formal semantics. An initial draft specification was published in 2017 [14], with an associated mechanised specification in Isabelle/HOL published by Watt that found bugs in the original specification, fixed before its publication [37].},
  isbn      = {978-3-030-90870-6}
}
@book{nipkow2002isabelle,
  title     = {{Isabelle/HOL}: a proof assistant for higher-order logic},
  author    = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C},
  year      = {2002},
  publisher = {Springer}
}
@book{hayashi2014introduction,
  title     = {Introduction to quantum information science},
  author    = {Hayashi, Masahito and Ishizaka, Satoshi and Kawachi, Akinori and Kimura, Gen and Ogawa, Tomohiro},
  year      = {2014},
  publisher = {Springer}
}
@book{omer2003structured,
  title  = {Structured quantum programming},
  author = {{\"O}mer, Bernhard},
  year   = {2003}
}
@inproceedings{sanders2000quantum,
  author    = {Sanders, J. W.
               and Zuliani, P.},
  editor    = {Backhouse, Roland
               and Oliveira, Jos{\'e} Nuno},
  title     = {Quantum Programming},
  booktitle = {Mathematics of Program Construction},
  year      = {2000},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {80--99},
  isbn      = {978-3-540-45025-2}
}
@misc{maymin1997extending,
  title         = {Extending the Lambda Calculus to Express Randomized and Quantumized Algorithms},
  author        = {Philip Maymin},
  year          = {1997},
  eprint        = {quant-ph/9612052},
  archiveprefix = {arXiv},
  primaryclass  = {quant-ph}
}
@inproceedings{altenkirch2005functional,
  author    = {Altenkirch, T. and Grattage, J.},
  booktitle = {20th Annual IEEE Symposium on Logic in Computer Science (LICS' 05)},
  title     = {A functional quantum programming language},
  year      = {2005},
  volume    = {},
  number    = {},
  pages     = {249-258},
  doi       = {10.1109/LICS.2005.1}
}
@inproceedings{green2013quipper,
  author    = {Green, Alexander S. and Lumsdaine, Peter LeFanu and Ross, Neil J. and Selinger, Peter and Valiron, Beno\^{\i}t},
  title     = {Quipper: A Scalable Quantum Programming Language},
  year      = {2013},
  isbn      = {9781450320146},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2491956.2462177},
  doi       = {10.1145/2491956.2462177},
  booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {333–342},
  numpages  = {10},
  keywords  = {quipper, quantum programming languages},
  location  = {Seattle, Washington, USA},
  series    = {PLDI '13}
}
@inproceedings{bichsel2020silq,
  author    = {Bichsel, Benjamin and Baader, Maximilian and Gehr, Timon and Vechev, Martin},
  title     = {Silq: A High-Level Quantum Language with Safe Uncomputation and Intuitive Semantics},
  year      = {2020},
  isbn      = {9781450376136},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3385412.3386007},
  doi       = {10.1145/3385412.3386007},
  booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages     = {286–300},
  numpages  = {15},
  keywords  = {Uncomputation, Semantics, Quantum Language},
  location  = {London, UK},
  series    = {PLDI 2020}
}
@article{yuan2022twist,
  author     = {Yuan, Charles and McNally, Christopher and Carbin, Michael},
  title      = {Twist: Sound Reasoning for Purity and Entanglement in Quantum Programs},
  year       = {2022},
  issue_date = {January 2022},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {6},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3498691},
  doi        = {10.1145/3498691},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jan},
  articleno  = {30},
  numpages   = {32},
  keywords   = {entanglement, purity, quantum programming, type systems}
}
@article{voichick2023qunity,
  author     = {Voichick, Finn and Li, Liyi and Rand, Robert and Hicks, Michael},
  title      = {Qunity: A Unified Language for Quantum and Classical Computing},
  year       = {2023},
  issue_date = {January 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {7},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3571225},
  doi        = {10.1145/3571225},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jan},
  articleno  = {32},
  numpages   = {31},
  keywords   = {reversible computing, Kraus operators, quantum subroutines, algebraic data types}
}
@article{yuan2022tower,
  author     = {Yuan, Charles and Carbin, Michael},
  title      = {Tower: Data Structures in Quantum Superposition},
  year       = {2022},
  issue_date = {October 2022},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {6},
  number     = {OOPSLA2},
  url        = {https://doi.org/10.1145/3563297},
  doi        = {10.1145/3563297},
  journal    = {Proc. ACM Program. Lang.},
  month      = {oct},
  articleno  = {134},
  numpages   = {30},
  keywords   = {history independence, reversible programming, quantum random-access memory, data structures, quantum programming}
}
@misc{ibm-quantum-computing,
  title        = {Introduction to Dynamic Circuits},
  author       = {IBM},
  year         = {2021},
  howpublished = {\url{https://quantum-computing.ibm.com/}}
}
@misc{openqasm2,
  title        = {OpenQASM 2.0},
  author       = {OpenQASM},
  year         = {2023},
  howpublished = {\url{https://github.com/openqasm/openqasm/tree/OpenQASM2.x}}
}
@misc{openqasm3,
  title        = {OpenQASM},
  author       = {OpenQASM},
  year         = {2023},
  howpublished = {\url{https://github.com/openqasm/openqasm}}
}
@misc{aersimulator,
  title        = {AerSimulator},
  author       = {Qiskit},
  year         = {2023},
  howpublished = {\url{https://www.qiskit.org/ecosystem/aer/stubs/qiskit_aer.AerSimulator.html}}
}
@misc{qiskit,
  title        = {Qiskit},
  author       = {IBM},
  year         = {2023},
  howpublished = {\url{https://qiskit.org/}}
}
@misc{cirq,
  title        = {Cirq},
  author       = {Google},
  year         = {2023},
  howpublished = {\url{https://quantumai.google/cirq}}
}
@misc{q-sharp,
  title        = {What are {Q\#} and the {Quantum Development Kit}?},
  author       = {Microsoft},
  year         = {2023},
  howpublished = {\url{https://learn.microsoft.com/en-us/azure/quantum/overview-what-is-qsharp-and-qdk}}
}
@misc{dynamic-circuit,
  title        = {A New {OpenQASM} for a New Era of Dynamic Circuits},
  author       = {Alexander, Thomas and Bishop, Lev and Cross, Andrew and Gambetta, Jay and Javadi-Abhari, Ali and Johnson, Blake and Smolin, John},
  year         = {2020},
  howpublished = {\url{https://medium.com/qiskit/a-new-openqasm-for-a-new-era-of-dynamic-circuits-87f031cac49}}
}
@misc{test262,
  title        = {{Test262}: {ECMAScript} Test Suite},
  author       = {TC39},
  year         = {2023},
  howpublished = {\url{https://github.com/tc39/test26}}
}
@misc{jck,
  title        = {Gaining Access to the {JCK}},
  author       = {OpenJDK},
  year         = {2023},
  howpublished = {\url{https://openjdk.org/groups/conformance/JckAccess/}}
}
@misc{staq,
  title        = {staq},
  author       = {softwareQinc},
  year         = {2023},
  howpublished = {\url{https://github.com/softwareQinc/staq}}
}
@misc{artifact,
  title        = {Physically-Consistent Executable Formal Semantics as a Testing Oracle for Quantum Circuit Simulators (Artifact)},
  author       = {Anonymous},
  year         = {2023},
  howpublished = {\url{https://anonymous.4open.science/r/PLDI24-anonymous-5B21}}
}
@misc{supp,
  title        = {Physically-Consistent Executable Formal Semantics as a Testing Oracle for Quantum Circuit Simulators (Companion Report)},
  author       = {Anonymous},
  year         = {2023},
  howpublished = {Submitted as a supplementary material}
}
